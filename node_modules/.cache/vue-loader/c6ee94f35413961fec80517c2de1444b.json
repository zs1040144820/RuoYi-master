{"remainingRequest":"C:\\Users\\TEL17562024206\\Desktop\\Desktop\\ruoyi-ui-master\\ruoyi-ui-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\TEL17562024206\\Desktop\\Desktop\\ruoyi-ui-master\\ruoyi-ui-master\\src\\views\\collectip\\collect1\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\TEL17562024206\\Desktop\\Desktop\\ruoyi-ui-master\\ruoyi-ui-master\\src\\views\\collectip\\collect1\\index.vue","mtime":1686732510000},{"path":"C:\\Users\\TEL17562024206\\Desktop\\Desktop\\ruoyi-ui-master\\ruoyi-ui-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1687240770813},{"path":"C:\\Users\\TEL17562024206\\Desktop\\Desktop\\ruoyi-ui-master\\ruoyi-ui-master\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1687240784151},{"path":"C:\\Users\\TEL17562024206\\Desktop\\Desktop\\ruoyi-ui-master\\ruoyi-ui-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1687240770813},{"path":"C:\\Users\\TEL17562024206\\Desktop\\Desktop\\ruoyi-ui-master\\ruoyi-ui-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1687240772826}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/collectip/collect1","sourcesContent":["<!-- 出口流量和交换机的地址收集 -->\n<template>\n  <div class=\"app-container\">\n    <el-form>\n      <el-form-item label=\"填写任务名称\" label-width=\"120px\">\n        <el-input v-model=\"collectip.filename\" placeholder=\"请输入任务名\" :style=\"{ width: '300px' }\" />\n        <span slot=\"label\">\n            填写任务名称\n            <el-tooltip content=\"用于分辨任务，可重复\" placement=\"top\">\n              <i class=\"el-icon-question\"></i>\n            </el-tooltip>\n        </span>\n      </el-form-item>\n          <el-form-item label=\"设定收集时长\" label-width=\"120px\">\n            <el-input v-model=\"collectip.collectime\" :value=\"defaultCollectTime\" placeholder=\"30\" :style=\"{ width: '300px' }\" />\n            <span slot=\"label\">\n            设定收集时长\n            <el-tooltip content=\"系统监测出口流量的持续时长\" placement=\"top\">\n              <i class=\"el-icon-question\"></i>\n            </el-tooltip>\n            </span>\n          </el-form-item>\n          <el-form-item label=\"设定时间类型\" label-width=\"120px\">\n            <el-select v-model=\"collectip.timetype\" :value=\"defaultTimeType\" placeholder=\"秒\" :style=\"{ width: '300px' }\">\n              <el-option label=\"时\" value=\"hour\"></el-option>\n              <el-option label=\"分\" value=\"min\"></el-option>\n              <el-option label=\"秒\" value=\"sec\"></el-option>\n            </el-select>\n            <span slot=\"label\">\n            设定时间类型\n            <el-tooltip content=\"选择时间单位\" placement=\"top\">\n              <i class=\"el-icon-question\"></i>\n            </el-tooltip>\n            </span>\n          </el-form-item>\n    </el-form>\n    <div slot=\"footer\" class=\"dialog-footer\">\n      <el-button size=\"small\"\n                 type=\"primary\"\n                 @click=\"startcollect\"\n                 v-hasPermi=\"['CollectIP:start']\"\n      >开始收集</el-button>\n    </div>\n    <div slot=\"tip\" class=\"el-upload__tip\" style=\"font-size: 14px;color: red\">提示：系统在定长时间内从出口流量和交换机收集IPv6地址，不可同时运行多个任务</div>\n    <br>\n    <br>\n    <el-card class=\"box-card\" style=\"width:1200px\" >\n      <div slot=\"header\" class=\"clearfix\">\n        <span style=\"color: white; background-color: dodgerblue; border-radius: 4px; padding: 5px 10px;\">\n          <template>\n            <span1><i class=\"el-icon-collection\"></i> 任务中已经收集到的IPv6地址</span1>\n          </template>\n        </span>\n        <el-button style=\"float: right; padding: 3px 0\" type=\"text\" icon=\"el-icon-download\" @click=\"extractIP\">一键提取</el-button>\n      </div>\n      <el-scrollbar style=\"height: 150px;\">\n      <div v-for=\"(item, index) in ipaddrs\" :key=\"index\" class=\"text item\">\n        {{ item }}\n      </div>\n      </el-scrollbar>\n    </el-card>\n    <br>\n    <br>\n    <el-card v-for=\"item in reverseCollectIPList\" :key=\"item.uniqueID\" style=\"width:1200px\" class=\"card\">\n      <div slot=\"header\" class=\"clearfix\">\n        <span>\n            <template v-if=\"item.tasksituation === '运行中'\">\n              <span1><i class=\"el-icon-loading\"></i> 运行中</span1>\n            </template>\n            <template v-else-if=\"item.tasksituation === '运行完毕'\">\n              <span2><i class=\"el-icon-finished\"></i> 运行完毕</span2>\n            </template>\n            <template v-else-if=\"item.tasksituation === '被终止'\">\n              <span3><i class=\"el-icon-close\"></i> 已终止</span3>\n            </template>\n          {{item.filename}}({{item.startime}})\n        </span>\n        <el-button\n          style=\"float: right;\n          padding: 3px 0\"\n          type=\"text\"\n          icon=\"el-icon-caret-right\"\n          :disabled=\"item.tasksituation === '运行完毕' || item.tasksituation === '被终止'\"\n          @click=\"terminateTask(item)\">终止</el-button>\n        <el-button\n          style=\"float: right;\n          padding: 3px 0\"\n          type=\"text\"\n          icon=\"el-icon-delete-solid\"\n          :disabled=\"item.tasksituation === '运行中'\"\n          @click=\"handleDelete(item)\">删除</el-button>\n      </div>\n      <template>\n        <el-scrollbar style=\"height: 200px;\">\n        任务名称：{{item.filename}}<br>\n        收集时长：{{item.collectime}}{{item.timetype}}<br>\n        唯一标识：{{item.uniqueID}}<br>\n        地址来源：{{item.source}}<br>\n        任务状态：{{ item.tasksituation }}<br>\n        回显情况：<br>\n        <div v-html=\"item.commandresponse\"/>\n        </el-scrollbar>\n        <el-progress style=\"width: 1000px\" :text-inside=\"true\" :stroke-width=\"26\" :percentage=item.rate></el-progress>\n      </template>\n    </el-card>\n    <br>\n  </div>\n</template>\n<script>\nimport {\n  inserTask,\n  startCollect,\n  showCollectList1,\n  delTaskInfo,\n  findTask,\n  getCmd,\n  showCommand2,\n  terminateTask,\n  terminateTask2,\n  showAllRecord2,\n  showIPAddrs2\n} from \"@/api/addrcollect/addrcollect\";\n\nexport default {\n  name: \"CollectIPAddr\",\n\n  data() {\n    return {\n      showCard:true,\n      showNotReady1: false,\n      showNotReady2: false,\n      ipaddrs: [],\n      detail2DataList: [],\n      detail2DataListTemp: {\n        uid:\"\",\n        detail:\"\",\n        command:\"\",\n      },\n      tempCmd: \"\",\n      timerId: null, //定时器ID\n      // 遮罩层\n      loading: true,\n      // 收集IP地址情况总览表格数据\n      collectIPList: [],\n      // 查询参数\n      queryParams: {\n        filename: null,\n        startime: null,\n        tasksituation: null,\n        source: null,\n      },\n      // 创建Collectip表单——胡雨丰23.4.6\n      collectip: {\n        filename: \"\",\n        collectime: \"\",\n        timetype: \"\",\n      },\n      defaultCollectTime: '30',\n      defaultTimeType: 'sec',\n      //计时器\n      interval2:null,\n      interval3:null,\n    };\n  },\n  computed: {\n    reverseCollectIPList(){\n      return this.collectIPList.reverse();\n    }\n  },\n  created() {\n    this.detail2DataListTemp = {};\n    this.showAllRecord();\n    this.getList();\n    this.interval2 = setInterval(this.showAllRecord,2000);\n    this.interval3 = setInterval(this.getList,2000);\n  },\n  beforeDestroy() {\n    // 销毁定时器\n    clearInterval(this.timerId);\n    clearInterval(this.interval2);\n    clearInterval(this.interval3);\n  },\n\n  methods: {\n    /** 文件名为空错误 */\n    showMessageName() {\n      //this.showmessageName = true;\n      //setTimeout(() => {\n      //this.showmessageName = false;\n      //}, 1700);\n      this.$message.error('操作失败，任务名不能为空');\n    },\n    /** 搜集时间不为整数错误 */\n    showMessageTime() {\n      //this.showmessageTime = true;\n      //setTimeout(() => {\n      //  this.showmessageTime = false;\n      //}, 1700);\n      this.$message.error('操作失败，收集时间必须为整数');\n    },\n    updateCurrentPage() {\n      return this.$refs[\"page\"].currentPage;\n    },\n    /** 查询种子地址文件总览列表 */\n    getList() {\n      this.loading = true;\n      showCollectList1(this.queryParams).then(response => {\n        this.collectIPList = response.rows;\n        this.loading = false;\n      });\n      showIPAddrs2().then(response => {\n        this.ipaddrs = response.rows;\n        this.loading = false;\n      });\n    },\n    /** 从出口流量和交换机批量收集IP地址 */\n    startcollect() {\n      if (!this.collectip.filename) {\n        this.showMessageName();\n        return;\n      }\n      if (!this.collectip.collectime) {\n        this.collectip.collectime = '30';\n      }\n      if(!Number.isInteger(Number(this.collectip.collectime))){\n        this.showMessageTime();\n        return;\n      }\n      if (!this.collectip.timetype) {\n        this.collectip.timetype = 'sec';\n      }\n      this.dialogVisible=false;\n      inserTask(this.collectip).then( response => {\n        console.log(response);\n        this.getList();\n        startCollect(this.collectip).then( response => {\n          console.log(response);\n          this.getList();\n        });\n      });\n    },\n    taskNotReady(row) {\n      if(row.source == \"出口流量和交换机\"){\n        this.timerId = setInterval(() => {\n          this.getCmd(row.uniqueID);\n        }, 1000);\n        this.showNotReady1 = true;\n      }\n      if(row.source == \"已有资产\"){\n        this.timerId = setInterval(() => {\n          this.getCmd2(row.uniqueID);\n        }, 1000);\n        this.showNotReady2 = true;\n      }\n    },\n    showAllRecord(){\n      showAllRecord2().then(response => {\n        this.detail2DataListTemp = response.rows;\n      });\n    },\n    closeNotReady() {\n      clearInterval(this.timerId);\n    },\n    getCmd(taskId){\n      getCmd(taskId).then(response => {\n        this.tempCmd = response.msg;\n        console.log(response);\n      });\n    },\n    getCmd2(taskId){\n      showCommand2(taskId).then(response => {\n        this.detail2DataList = response.rows;\n        console.log(response);\n      });\n    },\n    findTask(row){\n      const taskId = row.uniqueID;\n      findTask(taskId).then(response => {\n        console.log(response.msg)\n        if (response.msg == \"运行中\") {\n          this.taskNotReady(row);\n          return;\n        } else if(response.msg == \"运行完毕\") {\n          this.$router.push('/collectipde');\n        } else if(response.msg == \"被终止\") {\n          this.taskNotReady(row);\n          return;\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    terminateTask(row){\n      this.$modal.confirm('是否确认终止该任务？').then(() => {\n        const taskId = row.uniqueID;\n        if(row.source == \"出口流量和交换机\") {\n          terminateTask(taskId).then(response => {\n            this.getList();\n            this.$modal.msgSuccess(\"终止成功\");\n          });\n        }\n        if(row.source == \"已有资产\") {\n          terminateTask2(taskId).then(response => {\n            this.getList();\n            this.$modal.msgSuccess(\"终止成功\");\n          });\n        }\n      }).catch(() => {});\n    },\n    /** 删除按钮操作 */\n    handleDelete(row) {\n      const taskId = row.uniqueID || this.ids;\n      this.$modal.confirm('是否确认删除任务信息？').then(() => {\n        if (Array.isArray(taskId)) {\n          // 如果taskId是一个数组，则遍历这个数组，对每个元素执行删除操作\n          taskId.forEach(id => {\n            delTaskInfo(id).then(() => {\n              this.getList();\n              this.$modal.msgSuccess(\"删除成功\");\n              this.getList();\n            }).catch(() => {});\n            this.getList();\n          });\n        } else {\n          // 如果taskId不是一个数组，则直接执行删除操作\n          delTaskInfo(taskId).then(() => {\n            this.getList();\n            this.$modal.msgSuccess(\"删除成功\");\n            this.getList();\n          }).catch(() => {});\n          this.getList();\n        }\n      }).catch(() => {});\n    },\n    /** 导出已经收集到的IP地址*/\n    extractIP(){\n      const addrs = this.ipaddrs;\n      const addrstr = addrs.join('\\n');  // 将元素连接成一个字符串，并在元素之间使用换行符连接\n      const blob = new Blob([addrstr], { type: 'text/plain' });  // 创建一个 Blob 对象\n      const link = document.createElement('a');\n      link.href = URL.createObjectURL(blob);\n      link.download = 'IPv6Addrs.txt';  // 指定下载文件的文件名为 data.txt\n      link.click();  // 触发链接点击事件来下载文件\n      URL.revokeObjectURL(link.href);  // 释放 URL 对象\n    }\n  }\n};\n</script>\n<style>\n  h3 {color: #157a0c}\n  .el-dropdown {\n    vertical-align: top;\n  }\n  .el-dropdown + .el-dropdown {\n    margin-left: 15px;\n  }\n  .el-icon-arrow-down {\n    font-size: 12px;\n  }\n  .card span > span1 {\n    background-color: orange;\n    border-radius: 4px;\n    padding: 2px 5px;\n    color: antiquewhite;\n  }\n  .card span > span2 {\n    background-color: mediumseagreen;\n    border-radius: 4px;\n    padding: 2px 5px;\n    color: antiquewhite;\n  }\n  .card span > span3 {\n    background-color: red;\n    border-radius: 4px;\n    padding: 2px 5px;\n    color: antiquewhite;\n  }\n  /* 调整 Element UI 滚动条宽度 */\n  .el-scrollbar__wrap::-webkit-scrollbar {\n    width: 5px;\n  }\n\n  .el-scrollbar__wrap::-webkit-scrollbar-thumb {\n    border-radius: 0;\n  }\n\n  .el-scrollbar__wrap::-webkit-scrollbar-track {\n    border-radius: 0;\n  }\n</style>\n"]}]}