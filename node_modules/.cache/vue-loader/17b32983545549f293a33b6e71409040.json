{"remainingRequest":"C:\\Users\\TEL17562024206\\Desktop\\Desktop\\ruoyi-ui-master\\ruoyi-ui-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\TEL17562024206\\Desktop\\Desktop\\ruoyi-ui-master\\ruoyi-ui-master\\src\\views\\pwdcrack\\cracking\\index.vue?vue&type=style&index=0&id=c542701a&lang=css&","dependencies":[{"path":"C:\\Users\\TEL17562024206\\Desktop\\Desktop\\ruoyi-ui-master\\ruoyi-ui-master\\src\\views\\pwdcrack\\cracking\\index.vue","mtime":1686732510000},{"path":"C:\\Users\\TEL17562024206\\Desktop\\Desktop\\ruoyi-ui-master\\ruoyi-ui-master\\node_modules\\css-loader\\dist\\cjs.js","mtime":1687240771299},{"path":"C:\\Users\\TEL17562024206\\Desktop\\Desktop\\ruoyi-ui-master\\ruoyi-ui-master\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1687240774283},{"path":"C:\\Users\\TEL17562024206\\Desktop\\Desktop\\ruoyi-ui-master\\ruoyi-ui-master\\node_modules\\postcss-loader\\src\\index.js","mtime":1687240771919},{"path":"C:\\Users\\TEL17562024206\\Desktop\\Desktop\\ruoyi-ui-master\\ruoyi-ui-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1687240770813},{"path":"C:\\Users\\TEL17562024206\\Desktop\\Desktop\\ruoyi-ui-master\\ruoyi-ui-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1687240772826}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmNsZWFyZml4OmJlZm9yZSwKLmNsZWFyZml4OmFmdGVyIHsKICBkaXNwbGF5OiB0YWJsZTsKICBjb250ZW50OiAiIjsKfQouY2xlYXJmaXg6YWZ0ZXIgewogIGNsZWFyOiBib3RoCn0KCi5ib3gtY2FyZCB7CiAgd2lkdGg6IDEwMDBweDsKICBoZWlnaHQ6IDYwMHB4Owp9Ci5zY3JvbGwtY29udGFpbmVyIHsKICBoZWlnaHQ6IDUwMHB4OwogIG92ZXJmbG93LXk6IHNjcm9sbDsKfQoKLnNjcm9sbC1jb250ZW50IHsKICBoZWlnaHQ6IDUwMHB4Owp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/pwdcrack/cracking","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div style=\"float: left\">\n      <el-form ref=\"elForm\" :model=\"formData\" :rules=\"rules\" size=\"medium\" :inline=\"true\" label-width=\"100px\">\n        <el-form-item label=\"目标地址\">\n          <el-input\n            v-model=\"formData.ipAddress\"\n            placeholder=\"请输入目标地址\"\n            clearable\n            @keyup.enter.native=\"handleQuery\"\n          />\n        </el-form-item>\n        <br>\n        <el-form-item>\n          <span slot=\"label\">\n            端口\n            <el-tooltip content=\"不指定端口，则使用协议默认端口\" placement=\"top\">\n              <i class=\"el-icon-question\"></i>\n            </el-tooltip>\n          </span>\n          <el-input\n            v-model=\"formData.port\"\n            placeholder=\"请输入端口号\"\n            clearable\n            @keyup.enter.native=\"handleQuery\"\n          />\n        </el-form-item>\n        <br>\n        <el-form-item label=\"用户名\">\n          <el-input\n            v-model=\"formData.uname\"\n            placeholder=\"请输入用户名\"\n            clearable\n            @keyup.enter.native=\"handleQuery\"\n          />\n        </el-form-item>\n        <br>\n        <el-form-item label=\"协议/数据库\">\n          <el-select v-model=\"formData.protoc\" filterable placeholder=\"请选择\" clearable=\"true\">\n            <el-option\n              v-for=\"item in protocolOptions\"\n              :key=\"item.value\"\n              :label=\"item.label\"\n              :value=\"item.value\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n        <br>\n        <el-form-item label=\"系统字典\">\n          <el-select v-model=\"formData.dic\"\n                     @change=\"input1Disabled = formData.dic !== ''\"\n                     v-bind:disabled=\"formData.myDic !== '' || input2Disabled\"\n                     filterable placeholder=\"请选择\" clearable=\"true\">\n            <el-option\n              v-for=\"item in options\"\n              :key=\"item.value\"\n              :label=\"item.label\"\n              :value=\"item.value\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n        <br>\n        <el-form-item label=\"自定义字典\">\n          <el-select v-model=\"formData.myDic\"\n                     @change=\"input2Disabled = formData.myDic !== ''\"\n                     v-bind:disabled=\"formData.dic !== '' || input1Disabled\"\n                     filterable placeholder=\"请选择\" clearable=\"true\">\n            <el-option v-for=\"item in myWordList\" :key=\"item\" :label=\"item\"\n                       :value=\"item\"></el-option>\n          </el-select>\n        </el-form-item>\n        <br>\n        <el-form-item label=\"上传\">\n          <el-upload\n            ref=\"upload\"\n            :limit=\"1\"\n            name=\"file\"\n            accept=\".txt\"\n            :action=\"upload.url\"\n            :headers=\"upload.headers\"\n            :file-list=\"upload.fileList\"\n            :on-progress=\"handleFileUploadProgress\"\n            :on-success=\"handleFileSuccess\"\n            :on-change=\"handleChange\"\n            :before-remove=\"handleRemove\"\n            :auto-upload=\"false\">\n            <el-button slot=\"trigger\" size=\"small\" type=\"primary\">浏览</el-button>\n            <el-button style=\"margin-left: 10px;\" size=\"small\" type=\"success\" :loading=\"upload.isUploading\" v-hasPermi=\"['crack:importData']\" @click=\"submitUpload\">上传</el-button>\n            <div slot=\"tip\" class=\"el-upload__tip\" style=\"font-size: 14px;color: red\">上传自定义字典到服务器</div>\n          </el-upload>\n        </el-form-item>\n        <br>\n        <el-form-item style=\"padding-left: 100px\">\n          <el-button\n            type=\"primary\"\n            @click=\"submitForm\"\n            style=\"background-color: orangered;width: 300%\"\n            v-hasPermi=\"['crack:startCrack']\"\n          >开始</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n    <div style=\"float: left\">\n      <el-card class=\"box-card\">\n        <div slot=\"header\" class=\"clearfix\">\n          <span>破解结果</span>\n          <!--<el-button style=\"float: right; padding: 3px 0\" type=\"text\">操作按钮</el-button>-->\n        </div>\n        <div class=\"scroll-container\"\n             v-loading=\"loading\"\n             element-loading-text=\"破解中\"\n             element-loading-spinner=\"el-icon-loading\"\n             element-loading-background=\"rgba(0, 0, 0, 0.8)\">\n          <div v-html=\"this.crackResult\" class=\"scroll-content\"\n\n          >\n          </div>\n        </div>\n      </el-card>\n    </div>\n  </div>\n</template>\n<script>\n  import { startCrack,getWordList,getResults} from \"@/api/pwdcrack/crack\";\n  import { getToken } from \"@/utils/auth\";\n  export default {\n    name:\"Cracking\",\n    components: {},\n    props: [],\n    data() {\n      return {\n        upload: {\n          // 是否禁用上传\n          isUploading: false,\n          // 设置上传的请求头部\n          headers: { Authorization: \"Bearer \" + getToken() },\n          // 上传的地址\n          url: process.env.VUE_APP_BASE_API + \"/crack/importData\",\n          // 上传的文件列表\n          fileList: []\n        },\n        input1Disabled:false,\n        input2Disabled: false,\n        //文件信息\n        fileInfo: {},\n        loading: false,\n        formData: {\n          ipAddress:null,\n          uname:null,\n          port:null,\n          protoc:null,\n          dic:'',\n          myDic:'',\n          crackResult:'',\n        },\n        myWordList:[],\n        protocolOptions:[\n          {\n            value: 'pop3',\n            label: 'POP3'\n          }, {\n            value: 'rdp',\n            label: 'RDP'\n          }, {\n            value: 'ftp',\n            label: 'FTP'\n          }, {\n            value: 'telnet',\n            label: 'Telnet'\n          }, {\n            value: 'mysql',\n            label: 'Mysql'\n          },{\n            value: 'oracle',\n            label: 'Oracle'\n          },\n        ],\n        options: [{\n          value: 'big.txt',\n          label: 'big.txt'\n        }, {\n          value: 'small.txt',\n          label: 'small.txt'\n        }, {\n          value: 'catala.txt',\n          label: 'catala.txt'\n        }, {\n          value: 'common.txt',\n          label: 'common.txt'\n        }, {\n          value: 'euskera.txt',\n          label: 'euskera.txt'\n        },{\n          value: 'extensions_common.txt',\n          label: 'extensions_common.txt'\n        },\n          {\n            value: 'indexes.txt',\n            label: 'indexes.txt'\n          },\n          {\n            value: 'mutations_common.txt',\n            label: 'mutations_common.txt'\n          },\n          {\n            value: 'spanish.txt',\n            label: 'spanish.txt'\n          },\n        ],\n        crackResult:\"\",\n        timeout:null,\n      }\n\n    },\n    computed: {},\n    watch: {},\n    created() {\n      getWordList().then(response => {\n        this.myWordList = response.data;\n      });\n      //this.timeout = setInterval(this.getCResult,2000);\n    },\n    mounted() {\n    },\n    methods: {\n      submitForm(){\n        this.crackResult = \"\";\n        this.timeout = setInterval(this.getCResult,1000);\n        //this.loading = true;\n        startCrack(this.formData).then(response => {\n          console.log(response);\n          //this.loading = false;\n        });\n      },\n      getCResult(){\n        getResults().then(response => {\n          console.log(response);\n          this.crackResult = response.data.crackResult;\n          this.$nextTick(() => {\n            if (!response.data.flag) {\n              const container = this.$el.querySelector('.scroll-container');\n              container.scrollTop = container.scrollHeight;\n              console.log(container.scrollHeight);\n            }else {\n              const container = this.$el.querySelector('.scroll-container');\n              container.scrollTop = container.scrollHeight;\n              console.log(container.scrollHeight);\n              clearInterval(this.timeout);\n            }\n          });\n        });\n      },\n      // 文件上传中处理\n      handleFileUploadProgress(event, file, fileList) {\n        this.upload.isUploading = true;\n      },\n      // 文件上传成功处理\n      handleFileSuccess(response, file, fileList) {\n        this.$alert(\"<div style='overflow: auto;overflow-x: hidden;max-height: 70vh;padding: 10px 20px 0;'>\" + response.msg + \"</div>\", \"提示\", { dangerouslyUseHTMLString: true });\n        this.upload.isUploading = false;\n        getWordList().then(response => {\n          this.myWordList = response.data;\n        });\n      },\n      handleChange(file, fileList){\n\n      },\n      handleRemove(file, fileList){\n\n      },\n      // 文件提交处理\n      submitUpload() {\n        this.$refs.upload.submit()\n      },\n  }\n  }\n\n</script>\n<style>\n  .clearfix:before,\n  .clearfix:after {\n    display: table;\n    content: \"\";\n  }\n  .clearfix:after {\n    clear: both\n  }\n\n  .box-card {\n    width: 1000px;\n    height: 600px;\n  }\n  .scroll-container {\n    height: 500px;\n    overflow-y: scroll;\n  }\n\n  .scroll-content {\n    height: 500px;\n  }\n</style>\n"]}]}